---
- name: 'Include Cloudflare DNS tasks'
  include_role:
    name: 'cloudflare-dns'
  vars:
    subdomain: 'sabnzbd'

- name: 'Create user'
  user:
    state: 'present'
    name: 'sabnzbd'
    group: '{{ media_group }}'
    system: yes
    comment: 'Sabnzbd container system user'
    create_home: no
    home: '{{ configs_dir }}/sabnzbd'
    shell: '/usr/sbin/nologin'
  register: 'sabnzbd_user'

- name: 'Create home directory'
  file:
    state: 'directory'
    path: '{{ sabnzbd_user.home }}'
    owner: '{{ sabnzbd_user.uid }}'
    group: '{{ sabnzbd_user.group }}'
    mode: '0755'

- name: 'Create and start linuxserver container'
  docker_container:
    state: 'started'
    name: 'sabnzbd'
    image: 'linuxserver/sabnzbd:latest'
    pull: yes
    volumes:
      - '{{ sabnzbd_user.home }}:/config'
      - '{{ download_dir }}:/downloads'
      - '{{ download_dir }}/incomplete:/incomplete-downloads'
    networks:
      - name: 'cloudnet'
        aliases:
          - 'sabnzbd'
    networks_cli_compatible: yes
    labels:
      traefik.enable: 'true'
      traefik.http.routers.sabnzbd.service: 'sabnzbd'
      traefik.http.routers.sabnzbd.rule: 'Host(`sabnzbd.{{ domain }}`)'
      traefik.http.routers.sabnzbd.tls: 'true'
      traefik.http.routers.sabnzbd.tls.certresolver: 'letsencrypt'
      traefik.http.routers.sabnzbd.tls.domains[0].main: '{{ domain }}'
      traefik.http.routers.sabnzbd.tls.domains[0].sans: '*.{{ domain }}'
      traefik.http.services.sabnzbd.loadbalancer.server.port: '8080'
    env:
      PUID: '{{ sabnzbd_user.uid }}'
      PGID: '{{ sabnzbd_user.group }}'
      TZ: '{{ timezone }}'
      UMASK: '002'
    purge_networks: yes
    memory: '500M'
    pids_limit: '50'
    restart_policy: 'on-failure'
    restart_retries: '5'
    healthcheck:
      start_period: '2s'
      test: 'curl --fail --head --silent http://localhost:8080/ || exit 1'
      interval: '10s'

- name: 'Wait until config file is created'
  stat:
    path: '{{ sabnzbd_user.home }}/sabnzbd.ini'
  register: 'sabnzbd_ini'
  until: 'sabnzbd_ini.stat.exists'
  retries: '5'
  delay: '3'

- name: 'Stop container'
  docker_container:
    state: 'stopped'
    name: 'sabnzbd'

- name: 'Add servers section to config file'
  lineinfile:
    state: 'present'
    path: '{{ sabnzbd_user.home }}/sabnzbd.ini'
    regexp: '^\[servers\]'
    line: '[servers]'
    insertafter: 'EOF'

- name: 'Add server providers to config file'
  when: 'sabnzbd_servers is defined'
  blockinfile:
    state: 'present'
    path: '{{ sabnzbd_user.home }}/sabnzbd.ini'
    marker: '# {mark} ANSIBLE MANAGED BLOCK - {{ item.name }}'
    insertafter: '\[servers\]'
    block: |
      [[{{ item.name }}]]
      name = {{ item.name }}
      displayname = {{ item.name }}
      host = {{ item.host }}
      port = {{ item.port }}
      timeout = 120
      username = {{ item.user }}
      password = {{ item.pass }}
      connections = {{ item.connections }}
      ssl = 1
      ssl_verify = 2
      ssl_ciphers = ""
      enable = 1
      optional = 0
      retention = {{ item.retention }}
      send_group = 0
      priority = {{ item.priority }}
      notes = ""
  loop: '{{ sabnzbd_servers }}'
  loop_control:
    label: '{{ item.name }}'

- name: 'Add categories section to config file'
  lineinfile:
    state: 'present'
    path: '{{ sabnzbd_user.home }}/sabnzbd.ini'
    regexp: '^\[categories\]'
    line: '[categories]'
    insertafter: 'EOF'

- name: 'Add categories to config file'
  when: 'sabnzbd_categories is defined'
  blockinfile:
    state: 'present'
    path: '{{ sabnzbd_user.home }}/sabnzbd.ini'
    marker: '# {mark} ANSIBLE MANAGED BLOCK - {{ item.name }}'
    insertafter: '\[categories\]'
    block: |
      [[{{ item.name }}]]
      name = {{ item.name }}
      order = {{ item.order }}
      pp = {{ item.processing }}
      script = {{ item.script }}
      dir = {{ item.directory }}
      newzbin = ""
      priority = {{ item.priority }}
  loop: '{{ sabnzbd_categories }}'
  loop_control:
    label: '{{ item.name }}'

- name: 'Tweak various options in config file'
  when: 'sabnzbd_settings is defined'
  ini_file:
    state: 'present'
    path: '{{ sabnzbd_user.home }}/sabnzbd.ini'
    section: 'misc'
    option: '{{ item.key }}'
    value: '{{ item.value }}'
    mode: '0600'
  loop: '{{ sabnzbd_settings | dict2items }}'
  loop_control:
    label: '{{ item.key }}'

- name: 'Start container'
  docker_container:
    state: 'started'
    name: 'sabnzbd'
